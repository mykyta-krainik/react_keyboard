{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyboardClick","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAmBEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CACZH,WAAYE,EAAME,OArBxB,uDAKE,WACEC,SAASC,iBACP,QACAC,KAAKN,uBARX,kCAYE,WACEI,SAASG,oBACP,QACAD,KAAKN,uBAfX,oBAyBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAD,mCAE+BA,EAF/B,KACG,kCAhCd,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.7f60aac9.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener(\n      'keyup',\n      this.handleKeyboardClick,\n    );\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\n      'keyup',\n      this.handleKeyboardClick,\n    );\n  }\n\n  handleKeyboardClick = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render(): JSX.Element {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressedKey\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}